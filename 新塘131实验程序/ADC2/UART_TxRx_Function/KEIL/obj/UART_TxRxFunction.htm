<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\UART_TxRxFunction.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\UART_TxRxFunction.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 481]: Last Updated: Fri Aug 11 11:16:13 2017
<BR><P>
<H3>Maximum Stack Usage =         84 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
UART1_IRQHandler &rArr; Gps_rev &rArr; gpsGPRMC &rArr; gpsspeed &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[c]">Default_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">Default_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[28]">Reset_Handler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[6]">BOD_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[7]">WDT_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[8]">EINT0_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[9]">EINT1_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[a]">GPAB_IRQHandler</a> from main.o(i.GPAB_IRQHandler) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[b]">GPCDEF_IRQHandler</a> from main.o(i.GPCDEF_IRQHandler) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[c]">Default_Handler</a> from startup_nuc131.o(.text) referenced 2 times from startup_nuc131.o(RESET)
 <LI><a href="#[d]">TMR0_IRQHandler</a> from main.o(i.TMR0_IRQHandler) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[e]">TMR1_IRQHandler</a> from main.o(i.TMR1_IRQHandler) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[f]">TMR2_IRQHandler</a> from main.o(i.TMR2_IRQHandler) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[10]">TMR3_IRQHandler</a> from main.o(i.TMR3_IRQHandler) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[11]">UART02_IRQHandler</a> from main.o(i.UART02_IRQHandler) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[12]">UART1_IRQHandler</a> from main.o(i.UART1_IRQHandler) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[13]">SPI0_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[14]">UART3_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[15]">UART4_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[16]">UART5_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[17]">I2C0_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[18]">I2C1_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[19]">CAN0_IRQHandler</a> from main.o(i.CAN0_IRQHandler) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[1a]">CAN1_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[1b]">PWM0_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[1c]">PWM1_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[1d]">BPWM0_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[1e]">BPWM1_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[1f]">BRAKE0_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[20]">BRAKE1_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[21]">PWRWU_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[22]">ADC_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[23]">CKD_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[24]">RTC_IRQHandler</a> from startup_nuc131.o(.text) referenced from startup_nuc131.o(RESET)
 <LI><a href="#[25]">main</a> from main.o(i.main) referenced from entry7.o(.ARM.Collect$$$$00000007)
 <LI><a href="#[26]">SystemInit</a> from system_nuc131.o(i.SystemInit) referenced from startup_nuc131.o(.text)
 <LI><a href="#[27]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_nuc131.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(.text)
</UL>
<P><STRONG><a name="[5c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[29]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2e]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[5d]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[28]"></a>Reset_Handler</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, startup_nuc131.o(.text))

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>BPWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>BPWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>BRAKE0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>BRAKE1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>CAN1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>CKD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>PWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>PWRWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numdisp_test
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsspeed
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Data
</UL>

<P><STRONG><a name="[2c]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART02_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR0_IRQHandler
</UL>

<P><STRONG><a name="[61]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>_memset$wrapper</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[54]"></a>strstr</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART02_IRQHandler
</UL>

<P><STRONG><a name="[56]"></a>strchr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, strchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsGPRMC
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsGPGGA
</UL>

<P><STRONG><a name="[2a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[63]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>ADC_INIT</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, main.o(i.ADC_INIT))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>ADC_Open</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, adc.o(i.ADC_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Open
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADC
</UL>

<P><STRONG><a name="[2f]"></a>Adc_Data</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, main.o(i.Adc_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Adc_Data &rArr; Read_ADC &rArr; ADC_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADC
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19]"></a>CAN0_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, main.o(i.CAN0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CAN0_IRQHandler &rArr; CAN_MsgInterrupt &rArr; CAN_Receive &rArr; CAN_ReadMsgObj
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_CLR_INT_PENDING_BIT
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_MsgInterrupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>CAN_BasicReceiveMsg</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, can.o(i.CAN_BasicReceiveMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_BasicReceiveMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Receive
</UL>

<P><STRONG><a name="[33]"></a>CAN_CLR_INT_PENDING_BIT</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, can.o(i.CAN_CLR_INT_PENDING_BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CAN_CLR_INT_PENDING_BIT
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_IRQHandler
</UL>

<P><STRONG><a name="[37]"></a>CAN_IsNewDataReceived</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, can.o(i.CAN_IsNewDataReceived))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_ReadMsgObj
</UL>

<P><STRONG><a name="[32]"></a>CAN_MsgInterrupt</STRONG> (Thumb, 414 bytes, Stack size 24 bytes, main.o(i.CAN_MsgInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CAN_MsgInterrupt &rArr; CAN_Receive &rArr; CAN_ReadMsgObj
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Receive
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_IRQHandler
</UL>

<P><STRONG><a name="[36]"></a>CAN_ReadMsgObj</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, can.o(i.CAN_ReadMsgObj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CAN_ReadMsgObj
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_IsNewDataReceived
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Receive
</UL>

<P><STRONG><a name="[35]"></a>CAN_Receive</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, can.o(i.CAN_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CAN_Receive &rArr; CAN_ReadMsgObj
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_ReadMsgObj
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_BasicReceiveMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_MsgInterrupt
</UL>

<P><STRONG><a name="[4b]"></a>CLK_EnableModuleClock</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, clk.o(i.CLK_EnableModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CLK_EnableModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[39]"></a>CLK_EnablePLL</STRONG> (Thumb, 348 bytes, Stack size 40 bytes, clk.o(i.CLK_EnablePLL))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CLK_EnablePLL &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
</UL>

<P><STRONG><a name="[49]"></a>CLK_EnableXtalRC</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clk.o(i.CLK_EnableXtalRC))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[3b]"></a>CLK_SetCoreClock</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, clk.o(i.CLK_SetCoreClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = CLK_SetCoreClock &rArr; CLK_EnablePLL &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[3c]"></a>CLK_SetHCLK</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, clk.o(i.CLK_SetHCLK))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CLK_SetHCLK &rArr; SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[4a]"></a>CLK_SetModuleClock</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, clk.o(i.CLK_SetModuleClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CLK_SetModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[3a]"></a>CLK_WaitClockReady</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, clk.o(i.CLK_WaitClockReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLK_WaitClockReady
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnablePLL
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[a]"></a>GPAB_IRQHandler</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, main.o(i.GPAB_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPAB_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DisableInt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>GPCDEF_IRQHandler</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, main.o(i.GPCDEF_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPCDEF_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DisableInt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>GPIO_DisableInt</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gpio.o(i.GPIO_DisableInt))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPCDEF_IRQHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPAB_IRQHandler
</UL>

<P><STRONG><a name="[41]"></a>GPIO_EnableInt</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio.o(i.GPIO_EnableInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_EnableInt
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT
</UL>

<P><STRONG><a name="[3f]"></a>GPIO_INIT</STRONG> (Thumb, 668 bytes, Stack size 24 bytes, main.o(i.GPIO_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GPIO_INIT &rArr; GPIO_SetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EnableInt
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>GPIO_SetMode</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, gpio.o(i.GPIO_SetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT
</UL>

<P><STRONG><a name="[43]"></a>Gpgga_rev</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, main.o(i.Gpgga_rev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Gpgga_rev &rArr; gpsGPGGA &rArr; StrToIntFix
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsGPGGA
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[4f]"></a>Gprs_rev</STRONG> (Thumb, 384 bytes, Stack size 20 bytes, main.o(i.Gprs_rev))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Gprs_rev
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rec_smsdata
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART02_IRQHandler
</UL>

<P><STRONG><a name="[45]"></a>Gps_rev</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, main.o(i.Gps_rev))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Gps_rev &rArr; gpsGPRMC &rArr; gpsspeed &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsGPRMC
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[30]"></a>Read_ADC</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, main.o(i.Read_ADC))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Read_ADC &rArr; ADC_Open
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Open
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Data
</UL>

<P><STRONG><a name="[48]"></a>SYS_Init</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, main.o(i.SYS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SYS_Init &rArr; CLK_SetCoreClock &rArr; CLK_EnablePLL &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClockReady
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetModuleClock
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetCoreClock
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableXtalRC
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_EnableModuleClock
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>StrToInt</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, main.o(i.StrToInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = StrToInt
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsGPRMC
</UL>

<P><STRONG><a name="[57]"></a>StrToIntFix</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, main.o(i.StrToIntFix))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = StrToIntFix
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsGPRMC
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsGPGGA
</UL>

<P><STRONG><a name="[3d]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, system_nuc131.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetHCLK
</UL>

<P><STRONG><a name="[26]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_nuc131.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(.text)
</UL>
<P><STRONG><a name="[d]"></a>TMR0_IRQHandler</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, main.o(i.TMR0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = TMR0_IRQHandler &rArr; numdisp_test &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numdisp_test
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TMR1_IRQHandler</STRONG> (Thumb, 1144 bytes, Stack size 48 bytes, main.o(i.TMR1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TMR1_IRQHandler &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numdisp8
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numdisp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TMR2_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, main.o(i.TMR2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TMR3_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(i.TMR3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>UART02_IRQHandler</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, main.o(i.UART02_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UART02_IRQHandler &rArr; rec_smsdata &rArr; Gprs_rev
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DisableInt
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rec_smsnumb
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rec_smsdata
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rec_cregdata
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rec_comrep
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_rev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART1_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, main.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = UART1_IRQHandler &rArr; Gps_rev &rArr; gpsGPRMC &rArr; gpsspeed &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_rev
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpgga_rev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>UART_DisableInt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uart.o(i.UART_DisableInt))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART02_IRQHandler
</UL>

<P><STRONG><a name="[34]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rec_smsdata
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rec_cregdata
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_MsgInterrupt
</UL>

<P><STRONG><a name="[64]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[65]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[66]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[44]"></a>gpsGPGGA</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, main.o(i.gpsGPGGA))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gpsGPGGA &rArr; StrToIntFix
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrToIntFix
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpgga_rev
</UL>

<P><STRONG><a name="[46]"></a>gpsGPRMC</STRONG> (Thumb, 362 bytes, Stack size 24 bytes, main.o(i.gpsGPRMC))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = gpsGPRMC &rArr; gpsspeed &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsspeed
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrToIntFix
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrToInt
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_rev
</UL>

<P><STRONG><a name="[58]"></a>gpsspeed</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, main.o(i.gpsspeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = gpsspeed &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsGPRMC
</UL>

<P><STRONG><a name="[25]"></a>main</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = main &rArr; SYS_Init &rArr; CLK_SetCoreClock &rArr; CLK_EnablePLL &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_UnlockReg
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc_Data
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_INIT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[4d]"></a>numdisp</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, main.o(i.numdisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = numdisp
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numdisp_test
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_IRQHandler
</UL>

<P><STRONG><a name="[4e]"></a>numdisp8</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(i.numdisp8))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_IRQHandler
</UL>

<P><STRONG><a name="[4c]"></a>numdisp_test</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, main.o(i.numdisp_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = numdisp_test &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;numdisp
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR0_IRQHandler
</UL>

<P><STRONG><a name="[53]"></a>rec_comrep</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, main.o(i.rec_comrep))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART02_IRQHandler
</UL>

<P><STRONG><a name="[52]"></a>rec_cregdata</STRONG> (Thumb, 282 bytes, Stack size 20 bytes, main.o(i.rec_cregdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = rec_cregdata &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART02_IRQHandler
</UL>

<P><STRONG><a name="[51]"></a>rec_smsdata</STRONG> (Thumb, 638 bytes, Stack size 20 bytes, main.o(i.rec_smsdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rec_smsdata &rArr; Gprs_rev
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_rev
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART02_IRQHandler
</UL>

<P><STRONG><a name="[50]"></a>rec_smsnumb</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, main.o(i.rec_smsnumb))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rec_smsnumb
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART02_IRQHandler
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[c]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_nuc131.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_nuc131.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT
</UL>

<P><STRONG><a name="[5a]"></a>SYS_UnlockReg</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(i.SYS_UnlockReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SYS_UnlockReg
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
